openapi: 3.1.0
info:
  version: 1.0.0
  title: API для управління контактами та користувачами
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  description: |
    Цей API надає розширений функціонал для управління обліковими записами користувачів та їхніми особистими контактами.
    Він включає функції реєстрації користувачів, автентифікації, скидання паролів та управління сесіями.
    Користувачі можуть створювати, оновлювати, видаляти та отримувати контакти, фільтрувати їх за типом або статусом улюбленого,
    а також завантажувати фотографії профілю, використовуючи безпечне хмарне зберігання.

servers:
  - url: https://nodejs-hw-mongodb-i55t.onrender.com

security:
  - bearerAuth: []

tags:
  - name: Contacts
    description: Операції, пов'язані з контактами
  - name: Auth
    description: Операції, пов'язані з реєстрацією та авторизацією користувачів

paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Реєстрація нового користувача
      operationId: registerUser
      description: Створення нового користувача на платформі.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        201:
          description: Користувача успішно зареєстровано.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully registered a user!
                  data:
                    $ref: "#/components/schemas/User"
        400:
          description: Некоректні дані.

  /auth/login:
    post:
      tags:
        - Auth
      summary: Авторизація користувача
      operationId: loginUser
      description: Отримання Bearer токена для доступу до захищених ресурсів.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        200:
          description: Успішний вхід, повертається токен авторизації.
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
        401:
          description: Некоректні дані для входу.

  /contacts/{contactId}:
    get:
      tags:
        - Contacts
      summary: Отримати контакт за ID
      operationId: getContactById
      parameters:
        - name: contactId
          in: path
          required: true
          description: ID контакту для отримання
          schema:
            type: string
      responses:
        200:
          description: Контакт успішно отримано.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
        404:
          description: Контакт не знайдено.

    patch:
      tags:
        - Contacts
      summary: Оновити контакт за ID
      operationId: updateContact
      parameters:
        - name: contactId
          in: path
          required: true
          description: ID контакту для оновлення
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contact"
      responses:
        200:
          description: Контакт успішно оновлено.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
        404:
          description: Контакт не знайдено.

    delete:
      tags:
        - Contacts
      summary: Видалити контакт за ID
      operationId: deleteContact
      parameters:
        - name: contactId
          in: path
          required: true
          description: ID контакту для видалення
          schema:
            type: string
      responses:
        200:
          description: Контакт успішно видалено.
        404:
          description: Контакт не знайдено.

  /contacts:
    get:
      tags:
        - Contacts
      summary: Отримати список контактів
      operationId: getContacts
      parameters:
        - name: page
          in: query
          required: false
          description: Номер сторінки для пагінації
          schema:
            type: integer
            example: 1
        - name: perPage
          in: query
          required: false
          description: Кількість контактів на сторінку
          schema:
            type: integer
            example: 10
        - name: type
          in: query
          required: false
          description: Тип контактів (work, home, personal)
          schema:
            type: string
            example: work
        - name: isFavourite
          in: query
          required: false
          description: Фільтрація контактів за статусом улюблених
          schema:
            type: boolean
        - name: sortBy
          in: query
          required: false
          description: Поле для сортування контактів
          schema:
            type: string
            example: name
        - name: sortOrder
          in: query
          required: false
          description: Порядок сортування
          schema:
            type: string
            example: asc
      responses:
        200:
          description: Список контактів успішно отримано.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Contact"
        404:
          description: Контактів не знайдено.

    post:
      tags:
        - Contacts
      summary: Створити новий контакт
      operationId: createContact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contact"
      responses:
        201:
          description: Контакт успішно створено.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
        400:
          description: Невірний запит або вхідні дані.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  schemas:
    Contact:
      $ref: "../swagger/components/contact.yaml"

    User:
      type: object
      properties:
        _id:
          type: string
          example: 67082b1bbaaded498ecab554
        name:
          type: string
          example: "Jane Doe"
        email:
          type: string
          example: "jane@example.com"
        password:
          type: string
          example: "password123"
      required:
        - name
        - email
        - password
